
%==============================================================================
$ ATTR1_cut $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < cut) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_decrease $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < decrease) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_curb $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < curb) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_decline $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < decline) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_deplete $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < deplete) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_diminish $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < diminish) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_drop $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < drop) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_exhaust $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < exhaust) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_export $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < export) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_fall $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < fall) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_lessen $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < lessen) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_limit $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < limit) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_lower $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < lower) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_minimize $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < minimize) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_mitigate $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < mitigate) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_recede $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < recede) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_reduce $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < reduce) !<: =d1 !$. PP

delete d1


%==============================================================================
$ ATTR1_shrink $
%==============================================================================

NP < (VBN|VBD|VBG=d1 < shrink) !<: =d1 !$. PP

delete d1


%==============================================================================
$ SUBJ_cut $
%==============================================================================

NP > (S <+(S|VP) (VP <<# cut !< NP))


%==============================================================================
$ SUBJ_decrease $
%==============================================================================

NP > (S <+(S|VP) (VP <<# decrease !< NP))


%==============================================================================
$ SUBJ_curb $
%==============================================================================

NP > (S <+(S|VP) (VP <<# curb !< NP))


%==============================================================================
$ SUBJ_decline $
%==============================================================================

NP > (S <+(S|VP) (VP <<# decline !< NP))


%==============================================================================
$ SUBJ_deplete $
%==============================================================================

NP > (S <+(S|VP) (VP <<# deplete !< NP))


%==============================================================================
$ SUBJ_diminish $
%==============================================================================

NP > (S <+(S|VP) (VP <<# diminish !< NP))


%==============================================================================
$ SUBJ_drop $
%==============================================================================

NP > (S <+(S|VP) (VP <<# drop !< NP))


%==============================================================================
$ SUBJ_exhaust $
%==============================================================================

NP > (S <+(S|VP) (VP <<# exhaust !< NP))


%==============================================================================
$ SUBJ_export $
%==============================================================================

NP > (S <+(S|VP) (VP <<# export !< NP))


%==============================================================================
$ SUBJ_fall $
%==============================================================================

NP > (S <+(S|VP) (VP <<# fall !< NP))


%==============================================================================
$ SUBJ_lessen $
%==============================================================================

NP > (S <+(S|VP) (VP <<# lessen !< NP))


%==============================================================================
$ SUBJ_limit $
%==============================================================================

NP > (S <+(S|VP) (VP <<# limit !< NP))


%==============================================================================
$ SUBJ_lower $
%==============================================================================

NP > (S <+(S|VP) (VP <<# lower !< NP))


%==============================================================================
$ SUBJ_minimize $
%==============================================================================

NP > (S <+(S|VP) (VP <<# minimize !< NP))


%==============================================================================
$ SUBJ_mitigate $
%==============================================================================

NP > (S <+(S|VP) (VP <<# mitigate !< NP))


%==============================================================================
$ SUBJ_recede $
%==============================================================================

NP > (S <+(S|VP) (VP <<# recede !< NP))


%==============================================================================
$ SUBJ_reduce $
%==============================================================================

NP > (S <+(S|VP) (VP <<# reduce !< NP))


%==============================================================================
$ SUBJ_shrink $
%==============================================================================

NP > (S <+(S|VP) (VP <<# shrink !< NP))


%==============================================================================
$ OBJ_cut $
%==============================================================================

NP > (VP <<# cut )


%==============================================================================
$ OBJ_decrease $
%==============================================================================

NP > (VP <<# decrease )


%==============================================================================
$ OBJ_curb $
%==============================================================================

NP > (VP <<# curb )


%==============================================================================
$ OBJ_decline $
%==============================================================================

NP > (VP <<# decline )


%==============================================================================
$ OBJ_deplete $
%==============================================================================

NP > (VP <<# deplete )


%==============================================================================
$ OBJ_diminish $
%==============================================================================

NP > (VP <<# diminish )


%==============================================================================
$ OBJ_drop $
%==============================================================================

NP > (VP <<# drop )


%==============================================================================
$ OBJ_exhaust $
%==============================================================================

NP > (VP <<# exhaust )


%==============================================================================
$ OBJ_export $
%==============================================================================

NP > (VP <<# export )


%==============================================================================
$ OBJ_fall $
%==============================================================================

NP > (VP <<# fall )


%==============================================================================
$ OBJ_lessen $
%==============================================================================

NP > (VP <<# lessen )


%==============================================================================
$ OBJ_limit $
%==============================================================================

NP > (VP <<# limit )


%==============================================================================
$ OBJ_lower $
%==============================================================================

NP > (VP <<# lower )


%==============================================================================
$ OBJ_minimize $
%==============================================================================

NP > (VP <<# minimize )


%==============================================================================
$ OBJ_mitigate $
%==============================================================================

NP > (VP <<# mitigate )


%==============================================================================
$ OBJ_recede $
%==============================================================================

NP > (VP <<# recede )


%==============================================================================
$ OBJ_reduce $
%==============================================================================

NP > (VP <<# reduce )


%==============================================================================
$ OBJ_shrink $
%==============================================================================

NP > (VP <<# shrink )


%==============================================================================
$ ATTR2_cut $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < cut) $. PP)

delete d1


%==============================================================================
$ ATTR2_decrease $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < decrease) $. PP)

delete d1


%==============================================================================
$ ATTR2_curb $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < curb) $. PP)

delete d1


%==============================================================================
$ ATTR2_decline $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < decline) $. PP)

delete d1


%==============================================================================
$ ATTR2_deplete $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < deplete) $. PP)

delete d1


%==============================================================================
$ ATTR2_diminish $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < diminish) $. PP)

delete d1


%==============================================================================
$ ATTR2_drop $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < drop) $. PP)

delete d1


%==============================================================================
$ ATTR2_exhaust $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < exhaust) $. PP)

delete d1


%==============================================================================
$ ATTR2_export $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < export) $. PP)

delete d1


%==============================================================================
$ ATTR2_fall $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < fall) $. PP)

delete d1


%==============================================================================
$ ATTR2_lessen $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < lessen) $. PP)

delete d1


%==============================================================================
$ ATTR2_limit $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < limit) $. PP)

delete d1


%==============================================================================
$ ATTR2_lower $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < lower) $. PP)

delete d1


%==============================================================================
$ ATTR2_minimize $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < minimize) $. PP)

delete d1


%==============================================================================
$ ATTR2_mitigate $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < mitigate) $. PP)

delete d1


%==============================================================================
$ ATTR2_recede $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < recede) $. PP)

delete d1


%==============================================================================
$ ATTR2_reduce $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < reduce) $. PP)

delete d1


%==============================================================================
$ ATTR2_shrink $
%==============================================================================

NP < (NP < (VBN|VBD|VBG=d1 < shrink) $. PP)

delete d1


%==============================================================================
$ NOM2_decrease $
%==============================================================================

NP < (NP <- (/NN/=d1 < decrease $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_decline $
%==============================================================================

NP < (NP <- (/NN/=d1 < decline $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_depletion $
%==============================================================================

NP < (NP <- (/NN/=d1 < depletion $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_drop $
%==============================================================================

NP < (NP <- (/NN/=d1 < drop $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_exhaustion $
%==============================================================================

NP < (NP <- (/NN/=d1 < exhaustion $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_export $
%==============================================================================

NP < (NP <- (/NN/=d1 < export $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_fall $
%==============================================================================

NP < (NP <- (/NN/=d1 < fall $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_limitation $
%==============================================================================

NP < (NP <- (/NN/=d1 < limitation $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_loss $
%==============================================================================

NP < (NP <- (/NN/=d1 < loss $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_mitigation $
%==============================================================================

NP < (NP <- (/NN/=d1 < mitigation $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_reduction $
%==============================================================================

NP < (NP <- (/NN/=d1 < reduction $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM2_shrinkage $
%==============================================================================

NP < (NP <- (/NN/=d1 < shrinkage $ /NN/ )  $. PP)

delete d1


%==============================================================================
$ NOM1_decrease $
%==============================================================================

NP <- (/NN/=d1 < decrease $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_decline $
%==============================================================================

NP <- (/NN/=d1 < decline $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_depletion $
%==============================================================================

NP <- (/NN/=d1 < depletion $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_drop $
%==============================================================================

NP <- (/NN/=d1 < drop $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_exhaustion $
%==============================================================================

NP <- (/NN/=d1 < exhaustion $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_export $
%==============================================================================

NP <- (/NN/=d1 < export $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_fall $
%==============================================================================

NP <- (/NN/=d1 < fall $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_limitation $
%==============================================================================

NP <- (/NN/=d1 < limitation $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_loss $
%==============================================================================

NP <- (/NN/=d1 < loss $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_mitigation $
%==============================================================================

NP <- (/NN/=d1 < mitigation $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_reduction $
%==============================================================================

NP <- (/NN/=d1 < reduction $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ NOM1_shrinkage $
%==============================================================================

NP <- (/NN/=d1 < shrinkage $ /NN/ )  !$. PP

delete d1


%==============================================================================
$ PCOMP_decrease $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# decrease))


%==============================================================================
$ PCOMP_decline $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# decline))


%==============================================================================
$ PCOMP_depletion $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# depletion))


%==============================================================================
$ PCOMP_drop $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# drop))


%==============================================================================
$ PCOMP_exhaustion $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# exhaustion))


%==============================================================================
$ PCOMP_export $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# export))


%==============================================================================
$ PCOMP_fall $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# fall))


%==============================================================================
$ PCOMP_limitation $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# limitation))


%==============================================================================
$ PCOMP_loss $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# loss))


%==============================================================================
$ PCOMP_mitigation $
%==============================================================================

NP > (PP <<# (of) $, (NP <<# mitigation))


%==============================================================================
$ PCOMP_reduction $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# reduction))


%==============================================================================
$ PCOMP_shrinkage $
%==============================================================================

NP > (PP <<# (in|of) $, (NP <<# shrinkage))

